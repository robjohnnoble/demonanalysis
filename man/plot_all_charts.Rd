% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/demonanalysis.R
\name{plot_all_charts}
\alias{plot_all_charts}
\title{Plot a set of charts representing allele frequencies and genotype sizes}
\usage{
plot_all_charts(path_or_dflist, output_filename = NA, file_type = "png",
  output_dir = NA, max_size = NA, generation = NA, numcells = NA,
  max_count = 10, num_parameters = NA)
}
\arguments{
\item{path_or_dflist}{folder containing the input files, or a list of data frames}

\item{output_filename}{name of output image file}

\item{file_type}{either "pdf" or "png" (other values default to "pdf")}

\item{output_dir}{folder in which to save the image file; if NA then plots are displayed on screen instead}

\item{max_size}{maximum size (default NA corresponds to plotting frequencies, not sizes)}

\item{generation}{Generation at which to make the measurement (default NA corresponds to the final Generation)}

\item{numcells}{Number of cells at which to make the measurement (default NA corresponds to the final size)}

\item{max_count}{Max value of y-axis in counts plot}

\item{num_parameters}{Number of parameters, accounting for the first set of columns in the dataframe}
}
\value{
plot displyed on screen
}
\description{
Plot a set of charts representing allele frequencies and genotype sizes
}
\details{
If both \code{generation} and \code{numcells} are provided then \code{numcells} 
takes precedent. A value for \code{num_parameters} is required only if the input data represents 
multiple simulations and either \code{generation} or \code{numcells} is specified.
}
\examples{
plot_all_charts(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
plot_all_charts(list(output_allele_counts, output_driver_allele_counts, 
output_genotype_counts, output_driver_genotype_counts))

# combining results from multiple simulations:
df1 <- all_output(system.file("example_batch", "", package = "demonanalysis", mustWork = TRUE), 
df_type = "allele_counts", generation = 10)
df2 <- all_output(system.file("example_batch", "", package = "demonanalysis", mustWork = TRUE), 
df_type = "driver_allele_counts", generation = 10)
df3 <- all_output(system.file("example_batch", "", package = "demonanalysis", mustWork = TRUE), 
df_type = "genotype_counts", generation = 10)
df4 <- all_output(system.file("example_batch", "", package = "demonanalysis", mustWork = TRUE), 
df_type = "driver_genotype_counts", generation = 10)
num_parameters <- count_parameters(system.file("example_batch", "", 
package = "demonanalysis", mustWork = TRUE))
plot_all_charts(list(df1, df2, df3, df4), num_parameters = num_parameters)
}
