check()
save(sum_df, file="data/sum_df.RData")
find_correlations(sum_df, "outcome", "DriverDiversity", "Cor_DriverDiversity")
check()
check()
get_cor_summary <- function(summary, col_names_list) {
summary <- summary %>%
group_by(start_size, gap, K, mig_rate) %>%
filter(!is.na(outcome)) %>%
filter(var(outcome) > 0)
cor_summary <- summary %>%
summarise(mean_start_time = mean(start_time))
result_names_list <- paste0("Cor_", col_names_list)
cor_summary_list <- list()
for(i in 1:length(col_names_list)) cor_summary_list[[i]] <- find_correlations(summary, "outcome", col_names_list[i], result_names_list[i])
for(i in 1:length(col_names_list)) cor_summary <- merge(cor_summary, cor_summary_list[[i]], all.x = TRUE)
return(cor_summary)
}
get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
get_cor_summary <- function(summary, col_names_list) {
parameter_column_names <- colnames(comb_df)[1:(which(colnames(comb_df) == "Generation") - 1)]
summary <- summary %>%
group_by(parameter_column_names) %>%
filter(!is.na(outcome)) %>%
filter(var(outcome) > 0)
cor_summary <- summary %>%
summarise(mean_start_time = mean(start_time))
result_names_list <- paste0("Cor_", col_names_list)
cor_summary_list <- list()
for(i in 1:length(col_names_list)) cor_summary_list[[i]] <- find_correlations(summary, "outcome", col_names_list[i], result_names_list[i])
for(i in 1:length(col_names_list)) cor_summary <- merge(cor_summary, cor_summary_list[[i]], all.x = TRUE)
return(cor_summary)
}
get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
get_cor_summary <- function(summary, col_names_list) {
parameter_column_names <- colnames(comb_df)[1:(which(colnames(comb_df) == "Generation") - 1)]
summary <- summary %>%
group_by_at(parameter_column_names) %>%
filter(!is.na(outcome)) %>%
filter(var(outcome) > 0)
cor_summary <- summary %>%
summarise(mean_start_time = mean(start_time))
result_names_list <- paste0("Cor_", col_names_list)
cor_summary_list <- list()
for(i in 1:length(col_names_list)) cor_summary_list[[i]] <- find_correlations(summary, "outcome", col_names_list[i], result_names_list[i])
for(i in 1:length(col_names_list)) cor_summary <- merge(cor_summary, cor_summary_list[[i]], all.x = TRUE)
return(cor_summary)
}
get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
sum_df$DriverEdgeDiversity <- sum_df$DriverEdgeDiversity * 1 + runif(dim(sum_df)[1]) / 5
save(sum_df, file="data/sum_df.RData")
get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
s1 <- data.frame(a = 1:3, b = 1:3 * (1 + rnorm(3) / 10))
s1
find_correlations(s1, "a", "b", "c")
s1 <- data.frame(a = rep(1, 3), b = 1:3 * (1 + rnorm(3) / 10))
find_correlations(s1, "a", "b", "c")
s1 %>%
mutate_(variance = interp(~var(var1), var1 = as.name("b"))) %>%
filter(variance > 0)
s1 <- data.frame(a = 1:3, b = rep(1, 3))
s1 %>%
mutate_(variance = interp(~var(var1), var1 = as.name("b"))) %>%
filter(variance > 0)
find_correlations(s1, "a", "b", "c")
cehck()
check()
get_wait_cor_summary <- function(summary, col_names_list) {
parameter_column_names <- colnames(comb_df)[1:(which(colnames(comb_df) == "Generation") - 1)]
summary <- summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == 10 | is.na(gap)) %>%
filter(!is.na(waiting_time)) %>%
filter(var(waiting_time) > 0)
cor_summary <- summary %>%
summarise(mean_start_time = mean(start_time))
result_names_list <- paste0("Cor_", col_names_list)
cor_summary_list <- list()
for(i in 1:length(col_names_list)) cor_summary_list[[i]] <- find_correlations(summary, "waiting_time", col_names_list[i], result_names_list[i])
for(i in 1:length(col_names_list)) cor_summary <- merge(cor_summary, cor_summary_list[[i]], all.x = TRUE)
return(cor_summary)
}
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
sum_df$waiting_time <- sum_df$waiting_time * 1 + runif(dim(sum_df)[1]) / 5
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
sum_df$gap
get_wait_cor_summary <- function(summary, col_names_list, gap) {
parameter_column_names <- colnames(comb_df)[1:(which(colnames(comb_df) == "Generation") - 1)]
summary <- summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap | is.na(gap)) %>%
filter(!is.na(waiting_time)) %>%
filter(var(waiting_time) > 0)
cor_summary <- summary %>%
summarise(mean_start_time = mean(start_time))
result_names_list <- paste0("Cor_", col_names_list)
cor_summary_list <- list()
for(i in 1:length(col_names_list)) cor_summary_list[[i]] <- find_correlations(summary, "waiting_time", col_names_list[i], result_names_list[i])
for(i in 1:length(col_names_list)) cor_summary <- merge(cor_summary, cor_summary_list[[i]], all.x = TRUE)
return(cor_summary)
}
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), 0.1)
get_wait_cor_summary <- function(summary, col_names_list, gap_val) {
parameter_column_names <- colnames(comb_df)[1:(which(colnames(comb_df) == "Generation") - 1)]
summary <- summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap_val | is.na(gap)) %>%
filter(!is.na(waiting_time)) %>%
filter(var(waiting_time) > 0)
cor_summary <- summary %>%
summarise(mean_start_time = mean(start_time))
result_names_list <- paste0("Cor_", col_names_list)
cor_summary_list <- list()
for(i in 1:length(col_names_list)) cor_summary_list[[i]] <- find_correlations(summary, "waiting_time", col_names_list[i], result_names_list[i])
for(i in 1:length(col_names_list)) cor_summary <- merge(cor_summary, cor_summary_list[[i]], all.x = TRUE)
return(cor_summary)
}
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), 0.1)
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), 0.35)
sum_df$waiting_time
sum_df$gap
mode(1:3)
g1 <- c(1,2,2,3)
names(sort(-table(g1)))[1]
gap_val <- names(sort(-table(sum_df$gap)))[1]
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), gap_val)
check()
check()
#'
get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
detach("package:ape", unload=TRUE)
detach("package:bindrcpp", unload=TRUE)
detach("package:devtools", unload=TRUE)
detach("package:dplyr", unload=TRUE)
detach("package:ggmuller", unload=TRUE)
detach("package:lazyeval", unload=TRUE)
detach("package:readr", unload=TRUE)
libary(devtools)
library(devtools)
install()
#'
get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
a1 <- 1:3
names(a1)
refresh_data_files <- function(file_name) {
full_name <- system.file(file_name, "", package = "demonanalysis", mustWork = TRUE)
save(read_delim(full_name), file = paste0("data/", file_name, ".RData"))
}
refresh_data_file <- function(file_name) {
full_name <- system.file(file_name, "", package = "demonanalysis", mustWork = TRUE)
save(read_delim(full_name), file = paste0("data/", file_name, ".RData"))
}
full_name <- system.file("driver_matrix", "", package = "demonanalysis", mustWork = TRUE)
full_name <- system.file("driver_matrix.dat", "", package = "demonanalysis", mustWork = TRUE)
full_name <- system.file("extdata", "driver_matrix.dat", package = "demonanalysis", mustWork = TRUE)
full_name
full_name <- system.file("extdata", paste0("driver_matrix", ".dat"), package = "demonanalysis", mustWork = TRUE)
grepl("test", "st")
grepl("st", "test")
grepl("st", "test")
grepl("st", "teet")
gsub("(.*),.*", "\\1", "abc, def")
gsub("(.*)..*", "\\1", "abc, def")
gsub("(.*)..*", "\\1", "abc. def")
gsub("(.*)\..*", "\\1", "abc. def")
gsub("(.*),.*", "\\1", "abc. def")
gsub("(.*)\\..*", "\\1", "abc. def")
gsub("(.*)\\..*", "\\1", "abc.def")
gsub("(.*)\\..*", "\\1", "abc.fg.def")
refresh_data_file <- function(file_name) {
full_name <- system.file("extdata", file_name, package = "demonanalysis", mustWork = TRUE)
file_name_no_ext <- gsub("(.*)\\..*", "\\1", file_name) # remove filename extension
save(read_delim(full_name), file = paste0("data/", file_name_no_ext, ".RData"))
}
?read.delim
?read_delim
refresh_data_file <- function(file_name, delim = "\t", col_names = TRUE) {
full_name <- system.file("extdata", file_name, package = "demonanalysis", mustWork = TRUE)
file_name_no_ext <- gsub("(.*)\\..*", "\\1", file_name) # remove filename extension
save(read_delim(full_name, delim = delim, col_names = col_names), file = paste0("data/", file_name_no_ext, ".RData"))
}
refresh_data_file("driver_matrix.dat")
library(readr)
refresh_data_file("driver_matrix.dat")
full_name <- system.file("extdata", "driver_matrix.dat", package = "demonanalysis", mustWork = TRUE)
file_name_no_ext <- gsub("(.*)\\..*", "\\1", file_name)
file_name_no_ext <- gsub("(.*)\\..*", "\\1", "driver_matrix.dat")
save(read_delim(full_name, delim = delim, col_names = col_names), file = paste0("data/", file_name_no_ext, ".RData"))
read_delim(full_name, delim = delim, col_names = col_names)
read_delim(full_name, delim = "\t", col_names = FALSE)
refresh_data_file <- function(file_name, delim = "\t", col_names = TRUE) {
full_name <- system.file("extdata", file_name, package = "demonanalysis", mustWork = TRUE)
file_name_no_ext <- gsub("(.*)\\..*", "\\1", file_name) # remove filename extension
save(read_delim(full_name, delim = delim, col_names = col_names), file = paste0("data/", file_name_no_ext, ".RData"))
}
refresh_data_file("driver_matrix.dat")
refresh_data_file("driver_matrix.dat", delim = "\t", col_names = FALSE)
system.file("extdata", "d.dat", package = "demonanalysis", mustWork = TRUE)
system.file("extdata", "driver_matrix.dat", package = "demonanalysis", mustWork = TRUE)
system.file("data", "driver_matrix.RData", package = "demonanalysis", mustWork = TRUE)
system.file("data", "driver_matrix.RData", package = "demonanalysis")
system.file("", "driver_matrix.RData", package = "demonanalysis", mustWork = TRUE)
system.file("data/driver_matrix.RData", package = "demonanalysis", mustWork = TRUE)
devtools::system.file("data/driver_matrix.RData", package = "demonanalysis", mustWork = TRUE)
check()
library(demonanalysis)
gap_val <- names(sort(-table(sum_df$gap)))[1] # the most frequent (mode average) gap value
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), gap_val)
sum_df
sum_df$waiting_time
sum_df$waiting_time <- sum_df$waiting_time * 1 + runif(dim(sum_df)[1]) / 5
save(sum_df, file="data/sum_df.RData")
gap_val <- names(sort(-table(sum_df$gap)))[1] # the most frequent (mode average) gap value
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), gap_val)
rm(sum_df)
gap_val <- names(sort(-table(sum_df$gap)))[1] # the most frequent (mode average) gap value
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), gap_val)
sum_df$waiting_time
sum_df$waiting_time <- sum_df$waiting_time * 1 + runif(dim(sum_df)[1]) / 5
sum_df$waiting_time
save(sum_df, file="data/sum_df.RData")
rm(sum_df)
install()
library(devtools)
install()
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), gap_val)
library(demonanalysis)
gap_val <- names(sort(-table(sum_df$gap)))[1] # the most frequent (mode average) gap value
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), gap_val)
sum_df$waiting_time
summary <- sum_df
parameter_column_names <- colnames(summary)[1:(which(colnames(summary) == "Generation") - 1)]
summary <- summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap_val | is.na(gap)) %>%
filter(!is.na(waiting_time)) %>%
filter(var(waiting_time) > 0)
library(dplyr)
parameter_column_names <- colnames(summary)[1:(which(colnames(summary) == "Generation") - 1)]
summary <- summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap_val | is.na(gap)) %>%
filter(!is.na(waiting_time)) %>%
filter(var(waiting_time) > 0)
cor_summary <- summary %>%
summarise(mean_start_time = mean(start_time))
cor_summary
parameter_column_names
summary <- sum_df
filter(summary , gap == gap_val | is.na(gap))
filter(summary , !is.na(waiting_time))
filter(summary , var(waiting_time) > 0)
summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap_val | is.na(gap)) %>%
filter(!is.na(waiting_time)) %>%
filter(var(waiting_time) > 0)
summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap_val | is.na(gap))
summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap_val | is.na(gap)) %>%
filter(!is.na(waiting_time))
summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap_val | is.na(gap)) %>%
filter(!is.na(waiting_time)) %>%
filter(var(waiting_time) > 0)
summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap_val | is.na(gap)) %>%
filter(!is.na(waiting_time)) %>% select(waiting_time)
s1 <- summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap_val | is.na(gap)) %>%
filter(!is.na(waiting_time))
s1$waiting_time
var(1:2)
var(1:1)
var(c(1,1))
var(c(1,2))
sum_df$gap
summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap_val | is.na(gap)) %>%
filter(!is.na(waiting_time)) %>% summarise(var(waiting_time))
s1 <- summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap_val | is.na(gap)) %>%
filter(!is.na(waiting_time)) %>% summarise(var(waiting_time))
View(s1)
s1 <- summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap_val | is.na(gap)) %>%
filter(!is.na(waiting_time))
s1$gap
var(1)
s1 <- summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap_val | is.na(gap)) %>%
filter(!is.na(waiting_time)) %>% summarise(count(waiting_time))
s1 <- summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap_val | is.na(gap)) %>%
filter(!is.na(waiting_time)) %>% summarise(mean(waiting_time))
check()
library(devtools)
check()
gap_val <- names(sort(-table(sum_df$gap)))[1] # the most frequent (mode average) gap value
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), gap_val)
get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
refresh_data_files()
df <- data.frame(gen_adj = rep(1:5, each = 3))
df
df <- data.frame(gen_adj = rep(1:5, times = 3))
df
df <- data.frame(gen_adj = rep(1:5, times = 3), NumCells = rep(1:5, times = 3))
df <- data.frame(param = rep(1:3, each = 5), gen_adj = rep(1:5, times = 3), NumCells = rep(1:5, times = 3))
df
df <- df %>% group_by_at(1:1)
df <- mutate(new_time = gen_adj - which.min(filter(df, NumCells > start_size)))
df <- df >%> mutate(new_time = gen_adj - which.min(filter(df, NumCells > start_size)))
df <- df %>% mutate(new_time = gen_adj - which.min(filter(df, NumCells > start_size)))
df <- df %>% mutate(new_time = gen_adj - which.min(filter(df, NumCells > 3)))
which.min(filter(df, NumCells > 3))
filter(df, NumCells > 3)
df <- df %>% mutate(new_time = gen_adj - min(gen_adj[Population > start_size]))
df <- df %>% mutate(new_time = gen_adj - min(gen_adj[NumCells > start_size]))
df <- df %>% mutate(new_time = gen_adj - min(gen_adj[NumCells > 3]))
df
colnames(sum_df)
add_columns <- function(df, start_size, num_parameters = 15) {
df$maxgen <- max(df$Generation, na.rm = TRUE)
df$gen_adj <- df$Generation / df$maxgen
df <- df %>% group_by_at(1:num_parameters)
df <- df %>% mutate(new_time = gen_adj - min(gen_adj[NumCells >= start_size]))
df <- df %>% mutate(div0 = DriverEdgeDiversity[new_time == 0])
return(df)
}
add_columns(output)
output
View(add_columns(output, 100))
View(add_columns(sum_df, 100))
add_columns <- function(df, start_size, num_parameters = 15) {
df$maxgen <- max(df$Generation, na.rm = TRUE)
df$gen_adj <- df$Generation / df$maxgen
df <- df %>% group_by_at(1:num_parameters)
df <- df %>% mutate(new_time = gen_adj - min(gen_adj[NumCells >= start_size]))
#df <- df %>% mutate(div0 = DriverEdgeDiversity[new_time == 0])
return(df)
}
View(add_columns(sum_df, 100))
add_columns(sum_df, 100)$gen_adj
add_columns(sum_df, 100)$new_time
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
add_columns(comb_df, 100)$new_time
View(add_columns(comb_df, 100))
add_columns(comb_df, 100)$new_time
add_columns(comb_df, 100)$gen_adj
combine_dfs <- function(full_dir, res = data.frame()) {
if(substr(full_dir, nchar(full_dir), nchar(full_dir)) == "/") full_dir <- substr(full_dir, 1, nchar(full_dir) - 1)
file_pars <- paste0(full_dir, "/parameters.dat")
file_out <- paste0(full_dir, "/output.dat")
file_div <- paste0(full_dir, "/output_diversities.dat")
df_pars <- read_delim(file_pars, "\t")
df_out <- read_delim(file_out, "\t")
df_div <- read_delim(file_div, "\t")
temp <- merge(df_out, df_div, all = TRUE)
temp <- cbind(df_pars, temp)
temp <- add_columns(temp)
return(rbind(res, temp))
}
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
rm(comb_df)
install()
rm(combine_dfs)
rm(add_columns
)
install()
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
install()
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
View(add_columns(comb_df, 100))
add_columns(comb_df, 100)$gen_adj
add_columns(comb_df, 100)$new_time
add_columns(comb_df, 100)$div0
add_columns(comb_df, 100)$max_gen
add_columns(comb_df, 100)$maxgen
refresh_data_files()
check()
check()
check()
check()
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
comb_df <- add_columns(comb_df)
View(comb_df)
add_relative_time(comb_df, 100)
df <- comb_df
df <- df %>% group_by_at(1:num_parameters)
df <- df %>% group_by_at(1:15)
df <- df %>% mutate(new_time = gen_adj - min(gen_adj[NumCells >= 100]))
df$gen_adj
min(gen_adj[NumCells >= 100])
min(df$gen_adj[df$NumCells >= 100])
df <- comb_df
df <- df %>% group_by_at(1:num_parameters)
df <- df %>% group_by_at(1:15)
View(df)
df$gen_adj
df$NumCells
df %>% mutate(new_time = gen_adj - min(gen_adj[NumCells >= start_size]))
df %>% mutate(new_time = gen_adj - min(gen_adj[NumCells >= 100]))
df %>% mutate(new_time = gen_adj)
df %>% mutate(new_time = gen_adj - 1)
df %>% mutate(new_time = gen_adj - min(gen_adj[NumCells >= 1]))
df %>% mutate(new_time = gen_adj - min(gen_adj[NumCells >= 100]))
df %>% mutate(new_time = gen_adj - min(gen_adj[NumCells >= 10]))
check()
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
comb_df <- add_columns(comb_df)
?ungroup
check()
check()
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
comb_df <- add_columns(comb_df)
comb_df$gen_adj
d1 <- data.frame(Generation = 1:10, Pop = 1:10)
add_columns(d1)
add_columns(d1, 0)
d1 <- data.frame(Par = 1, Generation = 1:10, Pop = 1:10)
add_columns(d1, 0)
add_columns(d1, 1)
d1 <- data.frame(Par = rep(1:2, times = 4), Generation = rep(1:4, times = 2), Pop = rep(1:4, times = 2))
add_columns(d1, 1)
d1 <- data.frame(Par = rep(1:2, each = 4), Generation = rep(1:4, times = 2), Pop = rep(1:4, times = 2))
add_columns(d1, 1)
check()
check()
check()
df <- data.frame(A = rep(1:2, each = 4), Generation = rep(1:4, times = 2), Y = rep(1:4, times = 2))
add_columns(df, 1)
df <- data.frame(A = rep(1:2, each = 4), Generation = c(1:4, 3:6), Y = rep(1:4, times = 2))
add_columns(df, 1)
check()
1:10/10
View(sum_df)
sum_df$gap
sum_df$start_size
which(colname(sum_df) == "gap")
which(col.name(sum_df) == "gap")
which(colnames(sum_df) == "gap")
which(colnames(sum_df) == "K")
cor_df <- get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
c(1:15, which(colnames(sum_df) == "gap"), which(colnames(sum_df) == "start_size"))
which(colnames(sum_df) == "seed")
col_nums <- c(1:15, which(colnames(sum_df) == "gap"), which(colnames(sum_df) == "start_size"))
col_nums <- col_nums[col_nums != which(colnames(sum_df) == "seed")]
col_nums
check()
cor_df <- get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
View(cor_df)
sum_df$gap
sum_df$final_size
sum_df$start_size
col_nums <- c(1:15, which(colnames(sum_df) == "gap"), which(colnames(sum_df) == "start_size"))
col_nums <- col_nums[col_nums != which(colnames(sum_df) == "seed")]
col_nums
check()
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
summary<- sum_df
col_nums <- c(1:num_parameters, which(colnames(summary) == "gap"), which(colnames(summary) == "start_size"))
col_nums <- col_nums[col_nums != which(colnames(summary) == "seed")]
col_nums
col_nums <- c(1:15, which(colnames(summary) == "gap"), which(colnames(summary) == "start_size"))
col_nums <- col_nums[col_nums != which(colnames(summary) == "seed")]
summary <- summary %>%
group_by_at(col_nums) %>%
filter(!is.na(outcome)) %>%
filter(var(outcome) > 0)
summary <- sum_df
summary <- summary %>%
group_by_at(col_nums) %>%
filter(!is.na(outcome))
View(summary)
sum_df$outcome
sum_df$outcome <- sum_df$outcome * (1 + 0.1 * rnorm(dim(sum_df[1])))
rm(sum_df)
sum_df$outcome <- sum_df$outcome * (1 + 0.1 * rnorm(dim(sum_df)[1]))
sum_df$outcome
get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
save(sum_df, file="data/sum_df.RData")
sum_df$gap
omb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
rm(omb_df)
s1 <- get_summary(comb_df, c(100, 300), c(0.35, 0.65), 1000)
View(s1)
comb_df2 <- combine_dfs("/Users/rnoble/Documents/MontpellierDocuments/Models/Demon/Testing/GenerateExampleData_seed1")
comb_df3 <- combine_dfs("/Users/rnoble/Documents/MontpellierDocuments/Models/Demon/Testing/GenerateExampleData_seed2")
sum_df <- rbind(comb_df, comb_df2, comb_df3)
View(sum_df)
comb_df <- rbind(comb_df, comb_df2, comb_df3)
sum_df <- get_summary(comb_df, c(100, 300), c(0.35, 0.65), 1000)
sum_df$start_size
sum_df$gap
save(sum_df, file="data/sum_df.RData")
get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
install()
