load_data("data")
head(parameters)
cbind(parameters, output)
check()
add_columns <- function(df) {
df$maxgen <- max(df$Generation)
df$gen_adj <- df$Generation / df$maxgen
delta <- rep(0, dim(df)[1])
for(i in 1:dim(df)[1]) {
pop <- df$gen_adj[i]
if(pop < gap) delta[i] = NA
else {
index0 <- which(abs(df$gen_adj - df$gen_adj[i] + gap) == min(abs(df$gen_adj - df$gen_adj[i] + gap)))
delta[i] <- df$Driver_Diversity[i] - df$Driver_Diversity[index0]
}
}
df$Delta <- delta
return(df)
}
add_columns(output)
add_columns <- function(df, gap) {
df$maxgen <- max(df$Generation)
df$gen_adj <- df$Generation / df$maxgen
delta <- rep(0, dim(df)[1])
for(i in 1:dim(df)[1]) {
pop <- df$gen_adj[i]
if(pop < gap) delta[i] = NA
else {
index0 <- which(abs(df$gen_adj - df$gen_adj[i] + gap) == min(abs(df$gen_adj - df$gen_adj[i] + gap)))
delta[i] <- df$Driver_Diversity[i] - df$Driver_Diversity[index0]
}
}
df$Delta <- delta
return(df)
}
add_columns(output, 5)
View(add_columns(output, 5))
View(add_columns(output, 1))
View(add_columns(output, 2))
check()
parameters
group_by(parameters, K)
group_by(parameters, parameters)
group_by(parameters, colnames(parameters))
colnames(parameters)
group_by_(parameters, colnames(parameters))
which(colnames(parameters) < colnames(parameters)["seed"])
colnames(parameters)["seed"]
which(colnames(parameters) == "seed")
colnames(parameters)[1:which(colnames(parameters) == "seed")]
colnames(parameters)[1:(which(colnames(parameters) == "seed") - 1)]
combine_dfs <- function(full_dir, res = data.frame()) {
file1 <- paste0(full_dir, "parameters.dat")
file2 <- paste0(full_dir, "output.dat")
df1 <- read_delim(file1, "\t")
df2 <- read_delim(file2, "\t")
df1 <- add_columns(df1)
return(rbind(res, cbind(df1, df2)))
}
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
combine_dfs <- function(full_dir, res = data.frame()) {
if(substr(input_dir, nchar(input_dir), nchar(input_dir)) == "/") input_dir <- substr(input_dir, 1, nchar(input_dir) - 1)
file1 <- paste0(full_dir, "parameters.dat")
file2 <- paste0(full_dir, "output.dat")
df1 <- read_delim(file1, "\t")
df2 <- read_delim(file2, "\t")
df1 <- add_columns(df1)
return(rbind(res, cbind(df1, df2)))
}
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
combine_dfs <- function(full_dir, res = data.frame()) {
if(substr(full_dir, nchar(full_dir), nchar(full_dir)) == "/") full_dir <- substr(full_dir, 1, nchar(full_dir) - 1)
file1 <- paste0(full_dir, "parameters.dat")
file2 <- paste0(full_dir, "output.dat")
df1 <- read_delim(file1, "\t")
df2 <- read_delim(file2, "\t")
df1 <- add_columns(df1)
return(rbind(res, cbind(df1, df2)))
}
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
system.file("extdata", "", package = "demonanalysis", mustWork = TRUE)
combine_dfs <- function(full_dir, res = data.frame()) {
if(substr(full_dir, nchar(full_dir), nchar(full_dir)) == "/") full_dir <- substr(full_dir, 1, nchar(full_dir) - 1)
file1 <- paste0(full_dir, "/parameters.dat")
file2 <- paste0(full_dir, "/output.dat")
df1 <- read_delim(file1, "\t")
df2 <- read_delim(file2, "\t")
df1 <- add_columns(df1)
return(rbind(res, cbind(df1, df2)))
}
system.file("extdata", "", package = "demonanalysis", mustWork = TRUE)
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
full_dir <- system.file("extdata", "", package = "demonanalysis", mustWork = TRUE)
file1 <- paste0(full_dir, "/parameters.dat")
file2 <- paste0(full_dir, "/output.dat")
df1 <- read_delim(file1, "\t")
file1
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
install()
library(demonanalysis)
library(demonanalysis)
install()
library(demonanalysis)
check()
add_columns(output)
add_columns <- function(df) {
df$maxgen <- max(df$Generation)
df$gen_adj <- df$Generation / df$maxgen
return(df)
}
add_columns(output)
check()
install()
library(demonanalysis)
document()
check()
install()
getwd()
install()
library(devtools)
install()
library(demonanalysis)
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
?rbind
get_summary <- function(data, start_size_range, gap_range, final_size) {
summary <- data.frame()
for(start_size in start_size_range) {
if(start_size <= max(start_size_range)) this_gap_range <- gap_range
else this_gap_range <- NA
parameter_column_names <- colnames(data)[1:(which(colnames(data) == "Generation") - 1)]
data <- data %>% group_by_(parameters, parameter_column_names)
for(gap in this_gap_range) {
if(start_size < final_size) {
new_summary1 <- data %>%
filter(Population >= start_size) %>%
summarise(start_time = min(gen_adj))
new_summary2 <- data %>%
filter(Population >= final_size) %>%
summarise(end_time = min(gen_adj))
new_summary12 <- merge(new_summary1, new_summary2, all.x = TRUE)
new_summary12 <- new_summary12 %>%
mutate(waiting_time = end_time - start_time)
}
else {
new_summary12 <- data %>%
filter(Population >= start_size) %>%
summarise(waiting_time = NA, start_time = NA, end_time = NA)
}
new_summary3 <- data %>%
filter(Population > start_size) %>%
filter(gen_adj < min(gen_adj) + gap) %>%
summarise(outcome = max(Population))
new_summary3a <- data %>%
filter(Population > start_size) %>%
summarise(outcome = max(Population))
new_summary3$outcome <- ifelse(new_summary3$outcome == new_summary3a$outcome, NA, new_summary3$outcome)
new_summary4 <- data %>%
filter(Population > start_size) %>%
filter(gen_adj == min(gen_adj)) %>%
mutate(gap = gap, start_size = start_size)
summary <- rbind(summary, merge(merge(new_summary12, new_summary3, all.x = TRUE), new_summary4, all.x = TRUE))
}
}
summary <- summary %>%
mutate(Ratio = Edge_Driver_Diversity / Driver_Diversity)
return(summary)
}
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
get_summary(comb_df, 10, 1, 100)
check()
install()
library(demonanalysis)
get_summary(comb_df, 10, 1, 100)
?get_summary
?all_output
document()
check()
install()
View(get_summary)
rm(get_summary)
install()
get_summary(comb_df, 10, 1, 100)
output
get_summary <- function(data, start_size_range, gap_range, final_size) {
summary <- data.frame()
for(start_size in start_size_range) {
this_gap_range <- gap_range
parameter_column_names <- colnames(data)[1:(which(colnames(data) == "Generation") - 1)]
data <- data %>% group_by_(parameters, parameter_column_names)
for(gap in this_gap_range) {
if(start_size < final_size) {
new_summary1 <- data %>%
filter(Population >= start_size) %>%
summarise(start_time = min(gen_adj))
new_summary2 <- data %>%
filter(Population >= final_size) %>%
summarise(end_time = min(gen_adj))
new_summary12 <- merge(new_summary1, new_summary2, all.x = TRUE)
new_summary12 <- new_summary12 %>%
mutate(waiting_time = end_time - start_time)
}
else {
new_summary12 <- data %>%
filter(Population >= start_size) %>%
summarise(waiting_time = NA, start_time = NA, end_time = NA)
}
new_summary3 <- data %>%
filter(Population > start_size) %>%
filter(gen_adj < min(gen_adj) + gap) %>%
summarise(outcome = max(Population))
new_summary3a <- data %>%
filter(Population > start_size) %>%
summarise(outcome = max(Population))
new_summary3$outcome <- ifelse(new_summary3$outcome == new_summary3a$outcome, NA, new_summary3$outcome)
new_summary4 <- data %>%
filter(Population > start_size) %>%
filter(gen_adj == min(gen_adj)) %>%
mutate(gap = gap, start_size = start_size)
summary <- rbind(summary, merge(merge(new_summary12, new_summary3, all.x = TRUE), new_summary4, all.x = TRUE))
}
}
summary <- summary %>%
mutate(Ratio = Edge_Driver_Diversity / Driver_Diversity)
return(summary)
}
rm(get_summary)
install()
get_summary(comb_df, 10, 1, 100)
install()
get_summary(comb_df, 10, 1, 100)
install()
get_summary(comb_df, 10, 1, 100)
install()
get_summary(comb_df, 10, 1, 100)
install()
get_summary(comb_df, 10, 1, 100)
colnames(comb_df)[1:(which(colnames(comb_df) == "Generation") - 1)]
print("Point 0; ", colnames(comb_df)[1:(which(colnames(comb_df) == "Generation") - 1)])
install()
get_summary(comb_df, 10, 1, 100)
install()
get_summary(comb_df, 10, 1, 100)
install()
get_summary(comb_df, 10, 1, 100)
quo(mean(1:10 * 2))
install()
get_summary(comb_df, 10, 1, 100)
install()
get_summary(comb_df, 10, 1, 100)
colnames(comb_df)[1:(which(colnames(comb_df) == "Generation") - 1)]
d1 <- colnames(comb_df)[1:(which(colnames(comb_df) == "Generation") - 1)]
class(d1)
d1[2]
install()
get_summary(comb_df, 10, 1, 100)
library(dplyr)
group_by_at(comb_df, 3:5)
1:which(colnames(comb_df) == "Generation")
install()
get_summary(comb_df, 10, 1, 100)
d1 <- 1:(which(colnames(comb_df) == "Generation") - 1)
group_by_at(comb_df, d1)
class(d1)
as.vector(d1)
as.numeric(d1)
is.vector(d1)
install()
get_summary(comb_df, 10, 1, 100)
install()
get_summary(comb_df, 10, 1, 100)
install()
get_summary(comb_df, 10, 1, 100)
install()
get_summary(comb_df, 10, 1, 100)
group_by_at(comb_df, 1:2)
comb_df
install()
get_summary(comb_df, 10, 1, 100)
install()
get_summary(comb_df, 10, 1, 100)
install()
get_summary(comb_df, 10, 1, 100)
View(get_summary(comb_df, 10, 1, 100))
View(get_summary(comb_df, 10, 0.1, 100))
get_summary(comb_df, c(10, 20), c(0.1, 0.2), 100)
install()
get_summary(comb_df, c(10, 20), c(0.1, 0.2), 100)
install()
get_summary(comb_df, c(10, 20), c(0.1, 0.2), 100)
check()
?cbind
install()
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
install()
library(demonanalysis)
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
full_dir <- system.file("extdata", "", package = "demonanalysis", mustWork = TRUE)
file1 <- paste0(full_dir, "/parameters.dat")
file2 <- paste0(full_dir, "/output.dat")
file3 <- paste0(full_dir, "/output_diversities.dat")
df1 <- read_delim(file1, "\t")
library(readr)
df1 <- read_delim(file1, "\t")
df1 <- read_delim(file1, "\t")
df1 <- read_delim(file1, "\t")
install()
df1 <- read_delim(file1, "\t")
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
install()
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
install()
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
install()
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
install()
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
install()
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
install()
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
?merge
install()
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
install()
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
install()
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
check()
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
View(comb_df)
combine_dfs <- function(full_dir, res = data.frame()) {
if(substr(full_dir, nchar(full_dir), nchar(full_dir)) == "/") full_dir <- substr(full_dir, 1, nchar(full_dir) - 1)
file1 <- paste0(full_dir, "/parameters.dat")
file2 <- paste0(full_dir, "/output.dat")
file3 <- paste0(full_dir, "/output_diversities.dat")
df1 <- read_delim(file1, "\t")
df2 <- read_delim(file2, "\t")
df3 <- read_delim(file3, "\t")
df2 <- add_columns(df2)
temp <- cbind(df1, df2)
temp <- merge(temp, df3, by = c("Generation", "Population"), all = TRUE)
return(rbind(res, temp))
}
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
combine_dfs <- function(full_dir, res = data.frame()) {
if(substr(full_dir, nchar(full_dir), nchar(full_dir)) == "/") full_dir <- substr(full_dir, 1, nchar(full_dir) - 1)
file_pars <- paste0(full_dir, "/parameters.dat")
file_out <- paste0(full_dir, "/output.dat")
file_div <- paste0(full_dir, "/output_diversities.dat")
df_pars <- read_delim(file_pars, "\t")
df_out <- read_delim(file_out, "\t")
df_div <- read_delim(file_div, "\t")
df_out <- add_columns(df_out)
temp <- merge(df_out, df_div, by = "Generation", all = TRUE)
temp <- cbind(df_pars, temp)
return(rbind(res, temp))
}
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
View(comb_df)
library(readr)
driver_matrix <- read_delim("~/Documents/GitHub/demonanalysis/inst/extdata/driver_matrix.dat",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
save(driver_matrix, file="data/driver_matrix.RData")
driver_phylo <- read_delim("~/Documents/GitHub/demonanalysis/inst/extdata/driver_phylo.dat", "\t")
driver_phylo <- read_delim("~/Documents/GitHub/demonanalysis/inst/extdata/driver_phylo.dat", "\t")
View(driver_phylo)
driver_phylo <- read_delim("~/Documents/GitHub/demonanalysis/inst/extdata/driver_phylo.dat", "\t")
View(driver_phylo)
save(driver_phylo, file="data/driver_phylo.RData")
output_allele_cum_dist <- read_delim("~/Documents/GitHub/demonanalysis/inst/extdata/output_allele_cum_dist.dat", "\t")
View(output_allele_cum_dist)
save(output_allele_cum_dist, file="data/output_allele_cum_dist.RData")
output_allele_hist <- read_delim("~/Documents/GitHub/demonanalysis/inst/extdata/output_allele_hist.dat", "\t")
View(output_allele_hist)
save(output_allele_hist, file="data/output_allele_hist.RData")
output_passengersgrid <- read_delim("~/Documents/GitHub/demonanalysis/inst/extdata/output_passengersgrid.dat", "\t")
output_passengersgrid <- read_delim("~/Documents/GitHub/demonanalysis/inst/extdata/output_passengersgrid.dat", "\t", col_names = FALSE)
View(output_passengersgrid)
save(output_passengersgrid, file="data/output_passengersgrid.RData")
output <- read_delim("~/Documents/GitHub/demonanalysis/inst/extdata/output.dat", "\t")
View(output)
save(output, file="data/output.RData")
parameters <- read_delim("~/Documents/GitHub/demonanalysis/inst/extdata/parameters.dat", "\t")
View(parameters)
save(parameters, file="data/parameters.RData")
check()
combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
colnames(combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE)))
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
comb_df$NumCells.x
comb_df$NumCells.y
check()
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
View(comb_df)
check()
combine_dfs <- function(full_dir, res = data.frame()) {
if(substr(full_dir, nchar(full_dir), nchar(full_dir)) == "/") full_dir <- substr(full_dir, 1, nchar(full_dir) - 1)
file_pars <- paste0(full_dir, "/parameters.dat")
file_out <- paste0(full_dir, "/output.dat")
file_div <- paste0(full_dir, "/output_diversities.dat")
df_pars <- read_delim(file_pars, "\t")
df_out <- read_delim(file_out, "\t")
df_div <- read_delim(file_div, "\t")
df_out <- add_columns(df_out)
temp <- merge(df_out, df_div, all = TRUE)
temp <- cbind(df_pars, temp)
return(rbind(res, temp))
}
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
View(comb_df)
View(output_passengersgrid)
grid_plot(output_passengersgrid)
check()
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
get_summary(comb_df, c(10, 20), c(0.1, 0.2), 100)
View(comb_df)
get_summary <- function(data, start_size_range, gap_range, final_size) {
summary <- data.frame()
parameter_column_nums <- 1:(which(colnames(data) == "Generation") - 1)
data <- data %>% group_by_at(parameter_column_nums)
for(start_size in start_size_range) {
for(gap in gap_range) {
if(start_size < final_size) {
new_summary1 <- data %>%
filter(NumCells >= start_size) %>%
summarise(start_time = min(gen_adj))
new_summary2 <- data %>%
filter(NumCells >= final_size) %>%
summarise(end_time = min(gen_adj))
new_summary12 <- merge(new_summary1, new_summary2, all.x = TRUE)
new_summary12 <- new_summary12 %>%
mutate(waiting_time = end_time - start_time)
}
else {
print("No")
new_summary12 <- data %>%
filter(NumCells >= start_size) %>%
summarise(waiting_time = NA, start_time = NA, end_time = NA)
}
new_summary3 <- data %>%
filter(NumCells > start_size) %>%
filter(gen_adj < min(gen_adj) + gap) %>%
summarise(outcome = max(NumCells))
new_summary3a <- data %>%
filter(NumCells > start_size) %>%
summarise(outcome = max(NumCells))
new_summary3$outcome <- ifelse(new_summary3$outcome == new_summary3a$outcome, NA, new_summary3$outcome)
new_summary4 <- data %>%
filter(NumCells > start_size) %>%
filter(gen_adj == min(gen_adj)) %>%
mutate(gap = gap, start_size = start_size)
summary <- rbind(summary, merge(merge(new_summary12, new_summary3, all.x = TRUE), new_summary4, all.x = TRUE))
}
}
return(summary)
}
get_summary(comb_df, c(10, 20), c(0.1, 0.2), 100)
get_summary <- function(data, start_size_range, gap_range, final_size) {
summary <- data.frame()
parameter_column_nums <- 1:(which(colnames(data) == "Generation") - 1)
data <- data %>% group_by_at(parameter_column_nums)
for(start_size in start_size_range) {
for(gap in gap_range) {
if(start_size < final_size) {
print("Yes")
new_summary1 <- data %>%
filter(NumCells >= start_size) %>%
summarise(start_time = min(gen_adj))
new_summary2 <- data %>%
filter(NumCells >= final_size) %>%
summarise(end_time = min(gen_adj))
new_summary12 <- merge(new_summary1, new_summary2, all.x = TRUE)
new_summary12 <- new_summary12 %>%
mutate(waiting_time = end_time - start_time)
}
else {
new_summary12 <- data %>%
filter(NumCells >= start_size) %>%
summarise(waiting_time = NA, start_time = NA, end_time = NA)
}
new_summary3 <- data %>%
filter(NumCells > start_size) %>%
filter(gen_adj < min(gen_adj) + gap) %>%
summarise(outcome = max(NumCells))
new_summary3a <- data %>%
filter(NumCells > start_size) %>%
summarise(outcome = max(NumCells))
new_summary3$outcome <- ifelse(new_summary3$outcome == new_summary3a$outcome, NA, new_summary3$outcome)
new_summary4 <- data %>%
filter(NumCells > start_size) %>%
filter(gen_adj == min(gen_adj)) %>%
mutate(gap = gap, start_size = start_size)
summary <- rbind(summary, merge(merge(new_summary12, new_summary3, all.x = TRUE), new_summary4, all.x = TRUE))
}
}
return(summary)
}
get_summary(comb_df, c(10, 20), c(0.1, 0.2), 100)
?min
check()
check()
get_summary(comb_df, c(10, 20), c(0.1, 0.2), 100)
rm(get_summary())
rm(get_summary
)
rm(combine_dfs
)
install()
install()
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
library(demonanalysis)
