plot_all_charts(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE), xmax = 20)
plot_all_charts(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE), xmax = 200)
tree <- get_tree_from_matrix(driver_matrix)
library(ape)
plot.phylo(tree, show.tip.label = FALSE)
phylo <- filter(driver_phylo, CellsPerSample == -1)
library(dplyr)
phylo <- filter(driver_phylo, CellsPerSample == -1)
sweep_times(phylo, threshold = 0.1)
library(dplyr)
library(ggmuller)
phylo <- filter(driver_phylo, CellsPerSample == -1)
pop_df <- get_population_df(phylo)
sweep_seq1 <- sweep_sequence(pop_df, lag_type = "proportions", breaks = 6)
sweep_seq2 <- sweep_sequence(pop_df, lag_type = "generations", lag_gens = 2)
identical(sweep_seq1, sweep_seq2)
sweep_seq1
sweep_seq2
View(pop_df)
unique(pop_df$Generation)
pop_df <- pop_df %>% group_by(Generation) %>%
filter(sum(Population) > 0) %>%
ungroup()
pop_df <- pop_df %>% group_by(Generation) %>%
mutate(Frequency = Population / sum(Population)) %>%
ungroup()
round(length(unique(pop_df$Generation))/6)
pop_df <- get_population_df(phylo)
sweep_sequence(pop_df, lag_type = "proportions", breaks = 6)
sweep_sequence(pop_df, lag_type = "generations", lag_gens = 6)
pop_df <- get_population_df(phylo)
sweep_seq1 <- sweep_sequence(pop_df, lag_type = "proportions", breaks = 6)
lag_gens <- round(length(unique(pop_df$Generation))/6)
sweep_seq2 <- sweep_sequence(pop_df, lag_type = "generations", lag_gens = lag_gens)
identical(sweep_seq1, sweep_seq2)
sweep_df <- data.frame(y = sweep_seq2, x = (1:length(sweep_seq2))/length(sweep_seq2))
plot(y ~ x , data = sweep_df, type = "l")
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
filter(comb_df, !is.na(DriverDiversity)) %>% select(NumCells)
filter(comb_df, !is.na(DriverDiversity)) %>% select(gen_adj, NumCells)
get_summary(comb_df, c(100, 300), c(0.5, 0.6), 100)
install()
get_summary(comb_df, c(100, 300), c(0.5, 0.6), 100)
comb_df %>%
filter(NumCells >= 100, !is.na(DriverDiversity)) %>%
summarise(start_time = min(gen_adj, na.rm = TRUE))
get_summary(comb_df, c(100, 300), c(0.5, 0.6), 1000)
get_summary(comb_df, c(100, 300), c(0.1, 0.5), 1000)
check()
View(get_summary(comb_df, c(100, 300), c(0.5, 0.6), 1000))
is.na(get_summary(comb_df, c(100, 300), c(0.5, 0.6), 1000))
sum(is.na(get_summary(comb_df, c(100, 300), c(0.5, 0.6), 1000)))
filter(comb_df, !is.na(DriverDiversity)) %>% select(gen_adj, NumCells)
get_summary(comb_df, c(100, 300), c(0.1, 0.5), 1000)
filter(comb_df, !is.na(DriverDiversity)) %>% select(gen_adj, NumCells)
get_summary(comb_df, c(100, 300), c(0.5, 0.6), 1000)
get_summary(comb_df, c(100, 300), c(0.5, 0.8), 1000)
get_summary(comb_df, c(100, 300), c(0.5, 0.8), 1000)$outcome
get_summary(comb_df, c(100, 300), c(0.5, 0.6), 1000)$outcome
get_summary(comb_df, c(100, 300), c(0.5, 0.7), 1000)$outcome
get_summary(comb_df, c(100, 300), c(0.4, 0.5), 1000)$outcome
get_summary(comb_df, c(100, 300), c(0.4, 0.65), 1000)$outcome
get_summary(comb_df, c(100, 300), c(0.3, 0.65), 1000)$outcome
get_summary(comb_df, c(100, 300), c(0.35, 0.65), 1000)$outcome
sum_df <- get_summary(comb_df, c(100, 300), c(0.35, 0.65), 1000)
View(sum_df)
install()
get_summary(comb_df, c(100, 300), c(0.35, 0.65), 1000)
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
install()
comb_df <- combine_dfs(system.file("extdata", "", package = "demonanalysis", mustWork = TRUE))
get_summary(comb_df, c(100, 300), c(0.35, 0.65), 1000)
check()
?interp
find_correlations <- function(summary, factor1, factor2, result_name, min_seeds) {
summary %>%
mutate_(variance = interp(~var(var1), var1 = as.name(factor2))) %>%
filter(variance > 0) %>%
filter_(factor1 >= min_seeds) %>%
summarise_(temp_name = interp(~cor(var1, var2), var1 = as.name(factor1), var2 = as.name(factor2))) %>%
rename_(.dots = setNames("temp_name", paste0(result_name)))
}
sum_df <- get_summary(comb_df, c(100, 300), c(0.35, 0.65), 1000)
find_correlations(sum_df, "outcome", "Driver_Diversity", "Cor_Driver_Diversity", 1)
library(lazyeval)
find_correlations(sum_df, "outcome", "Driver_Diversity", "Cor_Driver_Diversity", 1)
find_correlations(sum_df, "outcome", "DriverDiversity", "Cor_DriverDiversity", 1)
1:3 + rnorm(1)
1:3 + rnorm(3)
sum_df2 <- rbind(sum_df, sum_df)
dim(sum_df2)
rep(1:2, each = dim(sum_df2)[1] / 2)
sum_df2 <- rbind(sum_df, sum_df)
sum_df2$seed <- rep(1:2, each = dim(sum_df2)[1] / 2)
sum_df2$DriverDiversity <- sum_df2$DriverDiversity * rnorm(dim(sum_df2)[1])
find_correlations(sum_df, "outcome", "DriverDiversity", "Cor_DriverDiversity", 1)
sum_df <- rbind(sum_df, sum_df2)
find_correlations(sum_df, "outcome", "DriverDiversity", "Cor_DriverDiversity", 1)
sum_df
rnorm(dim(sum_df2)[1])
dim(sum_df2)[1]
sum_df <- get_summary(comb_df, c(100, 300), c(0.35, 0.65), 1000)
sum_df2 <- rbind(sum_df, sum_df)
sum_df2$seed <- rep(1:2, each = dim(sum_df2)[1] / 2)
sum_df2$DriverDiversity <- sum_df2$DriverDiversity * 1 + runif(dim(sum_df2)[1]) / 5
sum_df <- rbind(sum_df, sum_df2)
View(sum_df)
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name(factor2)))
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = "DriverDiversity")
)
find_correlations <- function(summary, factor1, factor2, result_name, min_seeds) {
summary %>%
mutate_(variance = interp(~var(var1, na.rm = TRUE), var1 = as.name(factor2))) %>%
filter(variance > 0) %>%
filter_(factor1 >= min_seeds) %>%
summarise_(temp_name = interp(~cor(var1, var2), var1 = as.name(factor1), var2 = as.name(factor2))) %>%
rename_(.dots = setNames("temp_name", paste0(result_name)))
}
find_correlations(sum_df, "outcome", "DriverDiversity", "Cor_DriverDiversity", 1)
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = "DriverDiversity")
)
var(sum_df$DriverDiversity)
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = "DriverDiversity")
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = "DriverDiversity"))
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = "DriverDiversity")) %>% select(variance)
sum_df %>%
mutate_(variance = interp(~mean(var1), var1 = "DriverDiversity")) %>% select(variance)
sum_df %>%
mutate_(variance = interp(~mean(var1), var1 = as.name("DriverDiversity"))) %>% select(variance)
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity"))) %>% select(variance)
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity"))) %>% select(variance) %>%
filter(variance > 0)
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity"))) %>%
filter(variance > 0) %>%
filter_(factor1 >= 1) %>% select(variance)
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity"))) %>%
filter(variance > 0) %>%
filter_("outcome" >= 1) %>% select(variance)
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity"))) %>%
filter(variance > 0) %>%
filter_("outcome" >= 3) %>% select(variance)
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity"))) %>%
filter(variance > 0) %>%
filter_("outcome" >= 30) %>% select(variance)
find_correlations <- function(summary, factor1, factor2, result_name) {
summary %>%
mutate_(variance = interp(~var(var1), var1 = as.name(factor2))) %>%
filter(variance > 0) %>%
summarise_(temp_name = interp(~cor(var1, var2), var1 = as.name(factor1), var2 = as.name(factor2))) %>%
rename_(.dots = setNames("temp_name", paste0(result_name)))
}
find_correlations(sum_df, "outcome", "DriverDiversity", "Cor_DriverDiversity", 1)
find_correlations(sum_df, "outcome", "DriverDiversity", "Cor_DriverDiversity")
find_correlations <- function(summary, factor1, factor2, result_name) {
summary %>%
mutate_(variance = interp(~var(var1), var1 = as.name(factor2))) %>%
filter(variance > 0)# %>%
#summarise_(temp_name = interp(~cor(var1, var2), var1 = as.name(factor1), var2 = as.name(factor2))) %>%
#rename_(.dots = setNames("temp_name", paste0(result_name)))
}
find_correlations(sum_df, "outcome", "DriverDiversity", "Cor_DriverDiversity")
?cor
find_correlations <- function(summary, factor1, factor2, result_name) {
summary %>%
mutate_(variance = interp(~var(var1), var1 = as.name(factor2))) %>%
filter(variance > 0) %>%
summarise_(temp_name = interp(~cor(var1, var2, na.rm = TRUE), var1 = as.name(factor1), var2 = as.name(factor2))) %>%
rename_(.dots = setNames("temp_name", paste0(result_name)))
}
find_correlations(sum_df, "outcome", "DriverDiversity", "Cor_DriverDiversity")
cor(1:3, 3:5)
cor(c(1:3,NA), 3:6)
find_correlations <- function(summary, factor1, factor2, result_name) {
summary %>%
mutate_(variance = interp(~var(var1), var1 = as.name(factor2))) %>%
filter(variance > 0) %>%
filter_(!is.na(factor1)) %>%
summarise_(temp_name = interp(~cor(var1, var2), var1 = as.name(factor1), var2 = as.name(factor2))) %>%
rename_(.dots = setNames("temp_name", paste0(result_name)))
}
find_correlations(sum_df, "outcome", "DriverDiversity", "Cor_DriverDiversity")
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity"))) %>%
filter(variance > 0)
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity"))) %>%
filter(variance > 0) %>% select(outcome)
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity"))) %>%
filter(variance > 0) %>% filter_(!is.na("outcome")) %>% select(outcome)
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity"))) %>%
filter(variance > 0) %>% filter(!is.na(outcome)) %>% select(outcome)
find_correlations <- function(summary, factor1, factor2, result_name) {
summary %>%
mutate_(variance = interp(~var(var1), var1 = as.name(factor2))) %>%
filter(variance > 0) %>%
filter(!is.na(as.name(factor1))) %>%
summarise_(temp_name = interp(~cor(var1, var2), var1 = as.name(factor1), var2 = as.name(factor2))) %>%
rename_(.dots = setNames("temp_name", paste0(result_name)))
}
find_correlations(sum_df, "outcome", "DriverDiversity", "Cor_DriverDiversity")
find_correlations <- function(summary, factor1, factor2, result_name) {
summary %>%
mutate_(variance = interp(~var(var1), var1 = as.name(factor2))) %>%
filter(variance > 0) %>%
filter(!is.na(factor1)) %>%
summarise_(temp_name = interp(~cor(var1, var2), var1 = as.name(factor1), var2 = as.name(factor2))) %>%
rename_(.dots = setNames("temp_name", paste0(result_name)))
}
find_correlations(sum_df, "outcome", "DriverDiversity", "Cor_DriverDiversity")
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity")))) %>%
filter(variance > 0) %>%
filter(!is.na("outcome"))
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity"))) %>%
filter(variance > 0) %>%
filter(!is.na("outcome"))
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity"))) %>%
filter(variance > 0) %>%
filter(!is.na("outcome")) %>% select(outcome)
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity"))) %>%
filter(variance > 0) %>%
filter_(~!is.na("outcome")) %>% select(outcome)
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity"))) %>%
filter(variance > 0) %>%
filter_(!~is.na("outcome")) %>% select(outcome)
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity"))) %>%
filter(variance > 0) %>%
filter(!is.na(outcome)) %>% select(outcome)
sum_df %>%
mutate_(variance = interp(~var(var1), var1 = as.name("DriverDiversity"))) %>%
filter(variance > 0) %>%
filter(!is.na(as.name("outcome"))) %>% select(outcome)
sum_df <- filter(sum_df, !is.na(outcome))
find_correlations(sum_df, "outcome", "DriverDiversity", "Cor_DriverDiversity")
check()
check()
sum_df2 <- rbind(sum_df, sum_df)
sum_df2$seed <- rep(1:2, each = dim(sum_df2)[1] / 2)
sum_df <- get_summary(comb_df, c(100, 300), c(0.35, 0.65), 1000)
sum_df2 <- rbind(sum_df, sum_df)
sum_df2$seed <- rep(1:2, each = dim(sum_df2)[1] / 2)
sum_df2$DriverDiversity <- sum_df2$DriverDiversity * 1 + runif(dim(sum_df2)[1]) / 5
sum_df <- rbind(sum_df, sum_df2)
sum_df$outcome
s1 <- sum_df[which(!is.na(sum_df$outcome)), ]
sum_df$outcome
s1$outcome
sum_df <- sum_df[which(!is.na(sum_df$outcome)), ]
find_correlations(sum_df, "outcome", "DriverDiversity", "Cor_DriverDiversity")
check()
check()
find_correlations(sum_df, "outcome", "DriverDiversity", "Cor_DriverDiversity")
check()
check()
save(sum_df, file="data/sum_df.RData")
find_correlations(sum_df, "outcome", "DriverDiversity", "Cor_DriverDiversity")
check()
check()
get_cor_summary <- function(summary, col_names_list) {
summary <- summary %>%
group_by(start_size, gap, K, mig_rate) %>%
filter(!is.na(outcome)) %>%
filter(var(outcome) > 0)
cor_summary <- summary %>%
summarise(mean_start_time = mean(start_time))
result_names_list <- paste0("Cor_", col_names_list)
cor_summary_list <- list()
for(i in 1:length(col_names_list)) cor_summary_list[[i]] <- find_correlations(summary, "outcome", col_names_list[i], result_names_list[i])
for(i in 1:length(col_names_list)) cor_summary <- merge(cor_summary, cor_summary_list[[i]], all.x = TRUE)
return(cor_summary)
}
get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
get_cor_summary <- function(summary, col_names_list) {
parameter_column_names <- colnames(comb_df)[1:(which(colnames(comb_df) == "Generation") - 1)]
summary <- summary %>%
group_by(parameter_column_names) %>%
filter(!is.na(outcome)) %>%
filter(var(outcome) > 0)
cor_summary <- summary %>%
summarise(mean_start_time = mean(start_time))
result_names_list <- paste0("Cor_", col_names_list)
cor_summary_list <- list()
for(i in 1:length(col_names_list)) cor_summary_list[[i]] <- find_correlations(summary, "outcome", col_names_list[i], result_names_list[i])
for(i in 1:length(col_names_list)) cor_summary <- merge(cor_summary, cor_summary_list[[i]], all.x = TRUE)
return(cor_summary)
}
get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
get_cor_summary <- function(summary, col_names_list) {
parameter_column_names <- colnames(comb_df)[1:(which(colnames(comb_df) == "Generation") - 1)]
summary <- summary %>%
group_by_at(parameter_column_names) %>%
filter(!is.na(outcome)) %>%
filter(var(outcome) > 0)
cor_summary <- summary %>%
summarise(mean_start_time = mean(start_time))
result_names_list <- paste0("Cor_", col_names_list)
cor_summary_list <- list()
for(i in 1:length(col_names_list)) cor_summary_list[[i]] <- find_correlations(summary, "outcome", col_names_list[i], result_names_list[i])
for(i in 1:length(col_names_list)) cor_summary <- merge(cor_summary, cor_summary_list[[i]], all.x = TRUE)
return(cor_summary)
}
get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
sum_df$DriverEdgeDiversity <- sum_df$DriverEdgeDiversity * 1 + runif(dim(sum_df)[1]) / 5
save(sum_df, file="data/sum_df.RData")
get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
s1 <- data.frame(a = 1:3, b = 1:3 * (1 + rnorm(3) / 10))
s1
find_correlations(s1, "a", "b", "c")
s1 <- data.frame(a = rep(1, 3), b = 1:3 * (1 + rnorm(3) / 10))
find_correlations(s1, "a", "b", "c")
s1 %>%
mutate_(variance = interp(~var(var1), var1 = as.name("b"))) %>%
filter(variance > 0)
s1 <- data.frame(a = 1:3, b = rep(1, 3))
s1 %>%
mutate_(variance = interp(~var(var1), var1 = as.name("b"))) %>%
filter(variance > 0)
find_correlations(s1, "a", "b", "c")
cehck()
check()
get_wait_cor_summary <- function(summary, col_names_list) {
parameter_column_names <- colnames(comb_df)[1:(which(colnames(comb_df) == "Generation") - 1)]
summary <- summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == 10 | is.na(gap)) %>%
filter(!is.na(waiting_time)) %>%
filter(var(waiting_time) > 0)
cor_summary <- summary %>%
summarise(mean_start_time = mean(start_time))
result_names_list <- paste0("Cor_", col_names_list)
cor_summary_list <- list()
for(i in 1:length(col_names_list)) cor_summary_list[[i]] <- find_correlations(summary, "waiting_time", col_names_list[i], result_names_list[i])
for(i in 1:length(col_names_list)) cor_summary <- merge(cor_summary, cor_summary_list[[i]], all.x = TRUE)
return(cor_summary)
}
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
sum_df$waiting_time <- sum_df$waiting_time * 1 + runif(dim(sum_df)[1]) / 5
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
sum_df$gap
get_wait_cor_summary <- function(summary, col_names_list, gap) {
parameter_column_names <- colnames(comb_df)[1:(which(colnames(comb_df) == "Generation") - 1)]
summary <- summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap | is.na(gap)) %>%
filter(!is.na(waiting_time)) %>%
filter(var(waiting_time) > 0)
cor_summary <- summary %>%
summarise(mean_start_time = mean(start_time))
result_names_list <- paste0("Cor_", col_names_list)
cor_summary_list <- list()
for(i in 1:length(col_names_list)) cor_summary_list[[i]] <- find_correlations(summary, "waiting_time", col_names_list[i], result_names_list[i])
for(i in 1:length(col_names_list)) cor_summary <- merge(cor_summary, cor_summary_list[[i]], all.x = TRUE)
return(cor_summary)
}
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), 0.1)
get_wait_cor_summary <- function(summary, col_names_list, gap_val) {
parameter_column_names <- colnames(comb_df)[1:(which(colnames(comb_df) == "Generation") - 1)]
summary <- summary %>%
group_by_at(parameter_column_names) %>%
filter(gap == gap_val | is.na(gap)) %>%
filter(!is.na(waiting_time)) %>%
filter(var(waiting_time) > 0)
cor_summary <- summary %>%
summarise(mean_start_time = mean(start_time))
result_names_list <- paste0("Cor_", col_names_list)
cor_summary_list <- list()
for(i in 1:length(col_names_list)) cor_summary_list[[i]] <- find_correlations(summary, "waiting_time", col_names_list[i], result_names_list[i])
for(i in 1:length(col_names_list)) cor_summary <- merge(cor_summary, cor_summary_list[[i]], all.x = TRUE)
return(cor_summary)
}
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), 0.1)
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), 0.35)
sum_df$waiting_time
sum_df$gap
mode(1:3)
g1 <- c(1,2,2,3)
names(sort(-table(g1)))[1]
gap_val <- names(sort(-table(sum_df$gap)))[1]
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), gap_val)
check()
check()
#'
get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
detach("package:ape", unload=TRUE)
detach("package:bindrcpp", unload=TRUE)
detach("package:devtools", unload=TRUE)
detach("package:dplyr", unload=TRUE)
detach("package:ggmuller", unload=TRUE)
detach("package:lazyeval", unload=TRUE)
detach("package:readr", unload=TRUE)
libary(devtools)
library(devtools)
install()
#'
get_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"))
a1 <- 1:3
names(a1)
refresh_data_files <- function(file_name) {
full_name <- system.file(file_name, "", package = "demonanalysis", mustWork = TRUE)
save(read_delim(full_name), file = paste0("data/", file_name, ".RData"))
}
refresh_data_file <- function(file_name) {
full_name <- system.file(file_name, "", package = "demonanalysis", mustWork = TRUE)
save(read_delim(full_name), file = paste0("data/", file_name, ".RData"))
}
full_name <- system.file("driver_matrix", "", package = "demonanalysis", mustWork = TRUE)
full_name <- system.file("driver_matrix.dat", "", package = "demonanalysis", mustWork = TRUE)
full_name <- system.file("extdata", "driver_matrix.dat", package = "demonanalysis", mustWork = TRUE)
full_name
full_name <- system.file("extdata", paste0("driver_matrix", ".dat"), package = "demonanalysis", mustWork = TRUE)
grepl("test", "st")
grepl("st", "test")
grepl("st", "test")
grepl("st", "teet")
gsub("(.*),.*", "\\1", "abc, def")
gsub("(.*)..*", "\\1", "abc, def")
gsub("(.*)..*", "\\1", "abc. def")
gsub("(.*)\..*", "\\1", "abc. def")
gsub("(.*),.*", "\\1", "abc. def")
gsub("(.*)\\..*", "\\1", "abc. def")
gsub("(.*)\\..*", "\\1", "abc.def")
gsub("(.*)\\..*", "\\1", "abc.fg.def")
refresh_data_file <- function(file_name) {
full_name <- system.file("extdata", file_name, package = "demonanalysis", mustWork = TRUE)
file_name_no_ext <- gsub("(.*)\\..*", "\\1", file_name) # remove filename extension
save(read_delim(full_name), file = paste0("data/", file_name_no_ext, ".RData"))
}
?read.delim
?read_delim
refresh_data_file <- function(file_name, delim = "\t", col_names = TRUE) {
full_name <- system.file("extdata", file_name, package = "demonanalysis", mustWork = TRUE)
file_name_no_ext <- gsub("(.*)\\..*", "\\1", file_name) # remove filename extension
save(read_delim(full_name, delim = delim, col_names = col_names), file = paste0("data/", file_name_no_ext, ".RData"))
}
refresh_data_file("driver_matrix.dat")
library(readr)
refresh_data_file("driver_matrix.dat")
full_name <- system.file("extdata", "driver_matrix.dat", package = "demonanalysis", mustWork = TRUE)
file_name_no_ext <- gsub("(.*)\\..*", "\\1", file_name)
file_name_no_ext <- gsub("(.*)\\..*", "\\1", "driver_matrix.dat")
save(read_delim(full_name, delim = delim, col_names = col_names), file = paste0("data/", file_name_no_ext, ".RData"))
read_delim(full_name, delim = delim, col_names = col_names)
read_delim(full_name, delim = "\t", col_names = FALSE)
refresh_data_file <- function(file_name, delim = "\t", col_names = TRUE) {
full_name <- system.file("extdata", file_name, package = "demonanalysis", mustWork = TRUE)
file_name_no_ext <- gsub("(.*)\\..*", "\\1", file_name) # remove filename extension
save(read_delim(full_name, delim = delim, col_names = col_names), file = paste0("data/", file_name_no_ext, ".RData"))
}
refresh_data_file("driver_matrix.dat")
refresh_data_file("driver_matrix.dat", delim = "\t", col_names = FALSE)
system.file("extdata", "d.dat", package = "demonanalysis", mustWork = TRUE)
system.file("extdata", "driver_matrix.dat", package = "demonanalysis", mustWork = TRUE)
system.file("data", "driver_matrix.RData", package = "demonanalysis", mustWork = TRUE)
system.file("data", "driver_matrix.RData", package = "demonanalysis")
system.file("", "driver_matrix.RData", package = "demonanalysis", mustWork = TRUE)
system.file("data/driver_matrix.RData", package = "demonanalysis", mustWork = TRUE)
devtools::system.file("data/driver_matrix.RData", package = "demonanalysis", mustWork = TRUE)
check()
library(demonanalysis)
gap_val <- names(sort(-table(sum_df$gap)))[1] # the most frequent (mode average) gap value
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), gap_val)
sum_df
sum_df$waiting_time
sum_df$waiting_time <- sum_df$waiting_time * 1 + runif(dim(sum_df)[1]) / 5
save(sum_df, file="data/sum_df.RData")
gap_val <- names(sort(-table(sum_df$gap)))[1] # the most frequent (mode average) gap value
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), gap_val)
rm(sum_df)
gap_val <- names(sort(-table(sum_df$gap)))[1] # the most frequent (mode average) gap value
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), gap_val)
sum_df$waiting_time
sum_df$waiting_time <- sum_df$waiting_time * 1 + runif(dim(sum_df)[1]) / 5
sum_df$waiting_time
save(sum_df, file="data/sum_df.RData")
rm(sum_df)
install()
library(devtools)
install()
get_wait_cor_summary(sum_df, c("DriverDiversity", "DriverEdgeDiversity"), gap_val)
library(ggmuller)
example_df
example_pop_df
example_edges
library(readr)
pop_df_min <- read_csv("~/Desktop/pop_df_min.csv")
View(pop_df_min)
library(readr)
edges_min <- read_csv("~/Desktop/edges_min.csv")
View(edges_min)
Muller_df <- get_Muller_df(edges_min, pop_df_min)
Muller_plot(Muller_df)
